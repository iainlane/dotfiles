---
# Install Go binary from upstream
- name: Install Go binary
  ansible.builtin.include_tasks: install_binary.yml

# Set up environment
- name: Set GOPATH
  set_fact:
    gopath:
      stdout: "{{ go_install_dir }}"

# Choose build strategy based on connection type
- name: Build Go packages for local system
  ansible.builtin.include_tasks: build_local.yml
  when: not build_locally

- name: Build Go packages for target system (cross-compilation)
  ansible.builtin.include_tasks: build_target.yml
  when: build_locally

# Common post-install tasks
- name: Install `doggo` completions
  environment:
    PATH: "{{ gopath.stdout }}/bin:{{ ansible_env.PATH }}"
  vars:
    doggo_completion_path: "{{ go_user_config_dir }}/zsh/functions/_doggo"
  when: not ansible_check_mode and not doggo_completion_path is exists
  block:
    - name: Generate doggo completions
      ansible.builtin.command:
        cmd: doggo completions zsh
      register: doggo_completion
      changed_when: false

    - name: Ensure .zsh/functions directory exists
      ansible.builtin.file:
        path: "{{ go_user_config_dir }}/zsh/functions"
        state: directory
        mode: "0755"

    - name: Install doggo completions
      ansible.builtin.copy:
        content: "{{ doggo_completion.stdout }}"
        dest: "{{ doggo_completion_path }}"
        mode: "0644"
