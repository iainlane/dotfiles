---
- name: Remove old Go installation directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ user_data_dir }}/go"

- name: Build mise tools dictionary for Go
  ansible.builtin.set_fact:
    go_mise_tools: "{{ {'go': go_version} | combine(dict(['go:'] | product(go_packages) | map('join') | zip_longest([], fillvalue='latest'))) }}"

- name: Configure mise for Go tools
  ansible.builtin.include_role:
    name: mise_config
  vars:
    mise_config_name: go
    mise_priority: "10"
    mise_tools: "{{ go_mise_tools }}"

# Common post-install tasks
- name: Install `doggo` completions
  vars:
    doggo_completion_path: "{{ user_config_dir }}/zsh/functions/_doggo"
  when: not ansible_check_mode and not doggo_completion_path is exists
  block:
    - name: Get mise environment
      environment:
        PATH: "{{ ansible_env.HOME }}/.cargo/bin:{{ ansible_env.PATH }}"
      ansible.builtin.command:
        cmd: mise env --json
      register: mise_env_json
      changed_when: false

    - name: Parse mise environment
      ansible.builtin.set_fact:
        mise_env: "{{ mise_env_json.stdout | from_json }}"

    - name: Generate doggo completions
      environment:
        PATH: "{{ mise_env.PATH }}"
      ansible.builtin.command:
        cmd: doggo completions zsh
      register: doggo_completion
      changed_when: false

    - name: Ensure .zsh/functions directory exists
      ansible.builtin.file:
        path: "{{ user_config_dir }}/zsh/functions"
        state: directory
        mode: "0755"

    - name: Install doggo completions
      ansible.builtin.copy:
        content: "{{ doggo_completion.stdout }}"
        dest: "{{ doggo_completion_path }}"
        mode: "0644"
