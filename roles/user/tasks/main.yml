---
- name: Create users
  ansible.builtin.user:
    append: true
    update_password: on_create

    # per user
    comment: "{{ item.comment }}"
    groups: "{{ usergroups[os_family][item.user_type] }}"
    name: "{{ item.name }}"
    shell: "{{ item.shell }}"
  become: true
  loop: "{{ user_list }}"

  vars:
    usergroups:
      darwin:
        admin: [admin]
        regular: []
      debian:
        admin: [sudo, kvm]
        regular: []

- name: Install local scripts
  block:
    - name: Ensure local bin directory exists
      ansible.builtin.file:
        path: "~/.local/bin"
        state: directory
        mode: "0755"

    - name: Sync bin directory
      ansible.posix.synchronize:
        src: "templates/bin/"
        dest: "~/.local/bin/"
        delete: yes

- name: Create zsh files
  block:
    - name: Ensure zsh config directory exists
      ansible.builtin.file:
        path: "{{ user_config_dir }}/zsh"
        state: directory
        mode: "0755"

    - name: Copy zsh files
      ansible.posix.synchronize:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        delete: "{{ item.delete | default('no') }}"
      loop:
        - {
            src: "templates/zsh/functions/",
            dest: "~/.config/zsh/functions/",
            delete: yes,
          }
        - {
            src: "templates/zsh/plugins/",
            dest: "~/.config/zsh/plugins/",
            delete: yes,
          }
        - {
            src: "templates/zsh/zsh_plugins.txt",
            dest: "~/.config/zsh/zsh_plugins.txt",
          }
        - { src: "templates/zsh/zshenv", dest: "~/.zshenv" }
        - { src: "templates/zsh/zshrc", dest: "~/.config/zsh/.zshrc" }
        - {
            src: "templates/zsh/zstyles-post.zsh",
            dest: "~/.config/zsh/zstyles-post.zsh",
          }
        - {
            src: "templates/zsh/zstyles.zsh",
            dest: "~/.config/zsh/zstyles.zsh",
          }

- name: Neovim files
  block:
    - name: Ensure neovim config directory exists
      ansible.builtin.file:
        path: ~/.config/nvim
        state: directory
        mode: "0755"

    - name: Copy neovim files
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        directory_mode: "0755"
        mode: "0664"
      loop:
        - { src: "templates/nvim/", dest: "{{ user_config_dir }}/nvim/" }

- name: Starship files
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    directory_mode: "0755"
    mode: "0664"
  loop:
    - { src: "templates/starship/", dest: "{{ user_config_dir }}" }

- name: Catppuccin bat
  block:
    - name: Clone Catppuccin bat themes repo to cache dir
      ansible.builtin.git:
        repo: "https://github.com/catppuccin/bat.git"
        dest: "{{ user_repos_dir }}/catppuccin-bat"
        depth: 1
        version: main

    # we always need to get the directory to check it exists
    - name: Get bat config directory # noqa: no-changed-when
      ansible.builtin.command:
        cmd: ~/.cargo/bin/bat --config-dir
      register: bat_config_dir

    - name: Ensure config directory exists
      ansible.builtin.file:
        dest: "{{ bat_config_dir.stdout }}/themes"
        mode: "0755"
        state: directory

    - name: Sync bat themes
      ansible.posix.synchronize:
        src: "{{ user_repos_dir }}/catppuccin-bat/themes/"
        delete: true
        dest: "{{ bat_config_dir.stdout }}/themes/"
      delegate_to: "{{ inventory_hostname }}"
      notify: Update bat theme cache

- name: Lazygit config
  block:
    # we always need to get the directory to check it exists
    - name: Get lazygit config directory # noqa: no-changed-when
      ansible.builtin.command:
        cmd: ~/go/bin/lazygit --print-config-dir
      register: lazygit_config_dir

    - name: Ensure config directory exists
      ansible.builtin.file:
        dest: "{{ lazygit_config_dir.stdout }}"
        mode: "0755"
        state: directory

    - name: Copy config file
      ansible.builtin.copy:
        src: "templates/lazygit/"
        dest: "{{ lazygit_config_dir.stdout }}"
        directory_mode: "0755"
        mode: "0664"

    - name: Ensure config file exists
      ansible.builtin.copy:
        dest: "{{ lazygit_config_dir.stdout }}/config.yml"
        content: ""
        mode: "0644"
        force: no

# This prevents a "Last login" message from appearing when you open a new terminal
- name: Create a hushlogin file
  ansible.builtin.copy:
    content: ""
    dest: "~/.hushlogin"
    force: false
    mode: "0644"

- name: Set npm path
  ansible.builtin.command:
    cmd: npm config set prefix ~/.npm
    creates: "~/.npmrc"
  become: false

- name: Avoid annoying message when running docker
  ansible.builtin.copy:
    content: ""
    dest: /etc/containers/nodocker
    force: false
    group: root
    owner: root
    mode: "0644"
  become: true
  when: os_family == "debian"
